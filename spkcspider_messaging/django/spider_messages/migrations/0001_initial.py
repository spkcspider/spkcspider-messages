# Generated by Django 2.2.1 on 2019-06-02 13:41

from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import spkcspider_messaging.django.spider_messages.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('spider_keys', '0002_0002_20190426_squashed'),
    ]

    operations = [
        migrations.CreateModel(
            name='MessageContent',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('encrypted_content', models.FileField(null=True, upload_to=spkcspider_messaging.django.spider_messages.models.get_send_content_path)),
                ('key_list', jsonfield.fields.JSONField(help_text='Own encrypted keys')),
            ],
            options={
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='PostBox',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('only_persistent', models.BooleanField(blank=True, default=False, help_text='Only allow senders with a persistent token')),
                ('shared', models.BooleanField(blank=True, default=True, help_text='Encrypt send messages for other clients, allow updates')),
                ('keys', models.ManyToManyField(related_name='_postbox_keys_+', to='spider_keys.PublicKey')),
            ],
            options={
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='WebReference',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('url', models.URLField(max_length=600)),
                ('rtype', models.CharField(max_length=1)),
                ('cached_content', models.FileField(blank=True, upload_to=spkcspider_messaging.django.spider_messages.models.get_cached_content_path)),
                ('cached_size', models.PositiveIntegerField(blank=True, null=True)),
                ('key_list', jsonfield.fields.JSONField(help_text='encrypted keys for content')),
                ('postbox', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='spider_messages.PostBox')),
            ],
        ),
        migrations.CreateModel(
            name='WebReferenceCopy',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('keyhash', models.CharField(max_length=200)),
                ('received', models.BooleanField(blank=True, default=False)),
                ('ref', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='copies', to='spider_messages.WebReference')),
            ],
            options={
                'unique_together': {('ref', 'keyhash')},
            },
        ),
        migrations.CreateModel(
            name='MessageReceiver',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('received', models.BooleanField(blank=True, default=False)),
                ('utoken', models.CharField(max_length=100)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receivers', to='spider_messages.MessageContent')),
            ],
            options={
                'unique_together': {('content', 'utoken')},
            },
        ),
        migrations.CreateModel(
            name='MessageCopy',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('keyhash', models.CharField(max_length=200)),
                ('received', models.BooleanField(blank=True, default=False)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='copies', to='spider_messages.MessageContent')),
            ],
            options={
                'unique_together': {('content', 'keyhash')},
            },
        ),
    ]
